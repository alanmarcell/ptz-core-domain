{"version":3,"sources":["../dist-esnext/generateId.js"],"names":["P","generateIdWith","curry","genId","o","id","isNotNilOrEmpty","_id","assoc","generateId","generate"],"mappings":";;;;;;;AAAA;;IAAYA,C;;AACZ;;;;AACA;;;;;;;;AACA;;;AAGO,IAAMC,0CAAiB,gBAAEC,KAAF,CAAQ,UAACC,KAAD,EAAQC,CAAR,EAAc;AAChD,QAAI,CAACA,CAAL,EACI,OAAO,EAAEC,IAAIF,OAAN,EAAP;AACJ,QAAIH,EAAEM,eAAF,CAAkBF,EAAEC,EAApB,CAAJ,EACI,OAAOD,CAAP;AACJ,QAAMC,KAAKL,EAAEM,eAAF,CAAkBF,EAAEG,GAApB,IAA2BH,EAAEG,GAA7B,GAAmCJ,OAA9C;AACA,WAAO,gBAAEK,KAAF,CAAQ,IAAR,EAAcH,EAAd,EAAkBD,CAAlB,CAAP;AACH,CAP6B,CAAvB;AAQP;;;AAGO,IAAMK,kCAAaR,eAAe,kBAAQS,QAAvB,CAAnB;AACP","file":"generateId.js","sourcesContent":["import * as P from 'ptz-fp';\nimport R from 'ramda';\nimport shortid from 'shortid';\n/**\n * Generate Id with custom function.\n */\nexport const generateIdWith = R.curry((genId, o) => {\n    if (!o)\n        return { id: genId() };\n    if (P.isNotNilOrEmpty(o.id))\n        return o;\n    const id = P.isNotNilOrEmpty(o._id) ? o._id : genId();\n    return R.assoc('id', id, o);\n});\n/**\n * Generate Id if .id and ._id are null or undefined.\n */\nexport const generateId = generateIdWith(shortid.generate);\n//# sourceMappingURL=generateId.js.map"]}